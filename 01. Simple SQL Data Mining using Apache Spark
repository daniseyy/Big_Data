{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Library Initialization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import findspark to read SPARK_HOME and HADOOP_HOME\n",
    "import findspark \n",
    "findspark.init()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import required library \n",
    "from pyspark.sql import SparkSession"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "spark = SparkSession \\\n",
    ".builder \\\n",
    ".appName(\"Simple Mining using SQL US Baby Names Dataset\") \\\n",
    ".getOrCreate()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<pyspark.sql.session.SparkSession object at 0x000001940D103978>\n"
     ]
    }
   ],
   "source": [
    "print(spark)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Load Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_trial = spark.read.json(\"C://opt//spark//spark-2.3.3-bin-hadoop2.7//examples//src//main//resources//people.json\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+-------+\n",
      "| age|   name|\n",
      "+----+-------+\n",
      "|null|Michael|\n",
      "|  30|   Andy|\n",
      "|  19| Justin|\n",
      "+----+-------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df_trial.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = spark.read.csv(\"C://Users//asus//Documents//Datasets//NationalNames.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---+---------+----+------+-----+\n",
      "|_c0|      _c1| _c2|   _c3|  _c4|\n",
      "+---+---------+----+------+-----+\n",
      "| Id|     Name|Year|Gender|Count|\n",
      "|  1|     Mary|1880|     F| 7065|\n",
      "|  2|     Anna|1880|     F| 2604|\n",
      "|  3|     Emma|1880|     F| 2003|\n",
      "|  4|Elizabeth|1880|     F| 1939|\n",
      "|  5|   Minnie|1880|     F| 1746|\n",
      "|  6| Margaret|1880|     F| 1578|\n",
      "|  7|      Ida|1880|     F| 1472|\n",
      "|  8|    Alice|1880|     F| 1414|\n",
      "|  9|   Bertha|1880|     F| 1320|\n",
      "| 10|    Sarah|1880|     F| 1288|\n",
      "| 11|    Annie|1880|     F| 1258|\n",
      "| 12|    Clara|1880|     F| 1226|\n",
      "| 13|     Ella|1880|     F| 1156|\n",
      "| 14| Florence|1880|     F| 1063|\n",
      "| 15|     Cora|1880|     F| 1045|\n",
      "| 16|   Martha|1880|     F| 1040|\n",
      "| 17|    Laura|1880|     F| 1012|\n",
      "| 18|   Nellie|1880|     F|  995|\n",
      "| 19|    Grace|1880|     F|  982|\n",
      "+---+---------+----+------+-----+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "StructType(List(StructField(_c0,StringType,true),StructField(_c1,StringType,true),StructField(_c2,StringType,true),StructField(_c3,StringType,true),StructField(_c4,StringType,true)))"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.schema"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.createOrReplaceTempView(\"babynames\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "result = spark.sql(\"SELECT _c1 FROM babynames\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------+\n",
      "|      _c1|\n",
      "+---------+\n",
      "|     Name|\n",
      "|     Mary|\n",
      "|     Anna|\n",
      "|     Emma|\n",
      "|Elizabeth|\n",
      "|   Minnie|\n",
      "| Margaret|\n",
      "|      Ida|\n",
      "|    Alice|\n",
      "|   Bertha|\n",
      "|    Sarah|\n",
      "|    Annie|\n",
      "|    Clara|\n",
      "|     Ella|\n",
      "| Florence|\n",
      "|     Cora|\n",
      "|   Martha|\n",
      "|    Laura|\n",
      "|   Nellie|\n",
      "|    Grace|\n",
      "+---------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "result.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Data Mining Process"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Jumlah total laki-laki dan perempuan setiap tahun. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "query1 = spark.sql(\"SELECT _c2 as Year, SUM(_c4) FROM babynames WHERE _c3='F' GROUP BY _c2 ORDER BY _c2 ASC \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+------------------------+\n",
      "|Year|sum(CAST(_c4 AS DOUBLE))|\n",
      "+----+------------------------+\n",
      "|1880|                 90993.0|\n",
      "|1881|                 91954.0|\n",
      "|1882|                107850.0|\n",
      "|1883|                112321.0|\n",
      "|1884|                129022.0|\n",
      "|1885|                133055.0|\n",
      "|1886|                144535.0|\n",
      "|1887|                145982.0|\n",
      "|1888|                178627.0|\n",
      "|1889|                178366.0|\n",
      "|1890|                190377.0|\n",
      "|1891|                185482.0|\n",
      "|1892|                212346.0|\n",
      "|1893|                212906.0|\n",
      "|1894|                222922.0|\n",
      "|1895|                233630.0|\n",
      "|1896|                237920.0|\n",
      "|1897|                234202.0|\n",
      "|1898|                258770.0|\n",
      "|1899|                233023.0|\n",
      "+----+------------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query1.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "query2 = spark.sql(\"SELECT _c2 as Year, SUM(_c4) FROM babynames WHERE _c3='M' GROUP BY _c2 ORDER BY _c2 ASC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+------------------------+\n",
      "|Year|sum(CAST(_c4 AS DOUBLE))|\n",
      "+----+------------------------+\n",
      "|1880|                110491.0|\n",
      "|1881|                100745.0|\n",
      "|1882|                113688.0|\n",
      "|1883|                104629.0|\n",
      "|1884|                114445.0|\n",
      "|1885|                107800.0|\n",
      "|1886|                110784.0|\n",
      "|1887|                101414.0|\n",
      "|1888|                120853.0|\n",
      "|1889|                110584.0|\n",
      "|1890|                111025.0|\n",
      "|1891|                101196.0|\n",
      "|1892|                122037.0|\n",
      "|1893|                112317.0|\n",
      "|1894|                115772.0|\n",
      "|1895|                117398.0|\n",
      "|1896|                119570.0|\n",
      "|1897|                112758.0|\n",
      "|1898|                122693.0|\n",
      "|1899|                106212.0|\n",
      "+----+------------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query2.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Jumlah nama yang berbeda setiap tahun (Perempuan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "query3 = spark.sql(\"SELECT _c2 AS Year, COUNT(DISTINCT _c1) as Total  FROM babynames WHERE _c3='F' GROUP BY _c2 ORDER BY _c2 ASC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+-----+\n",
      "|Year|Total|\n",
      "+----+-----+\n",
      "|1880|  942|\n",
      "|1881|  938|\n",
      "|1882| 1028|\n",
      "|1883| 1054|\n",
      "|1884| 1172|\n",
      "|1885| 1197|\n",
      "|1886| 1282|\n",
      "|1887| 1306|\n",
      "|1888| 1474|\n",
      "|1889| 1479|\n",
      "|1890| 1534|\n",
      "|1891| 1533|\n",
      "|1892| 1661|\n",
      "|1893| 1652|\n",
      "|1894| 1702|\n",
      "|1895| 1808|\n",
      "|1896| 1825|\n",
      "|1897| 1799|\n",
      "|1898| 1975|\n",
      "|1899| 1842|\n",
      "+----+-----+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query3.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Jumlah nama yang berbeda per tahun (Laki-Laki)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "query4 = spark.sql(\"SELECT _c2 AS Year, COUNT(DISTINCT _c1) as Total  FROM babynames WHERE _c3='M' GROUP BY _c2 ORDER BY _c2 ASC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+-----+\n",
      "|Year|Total|\n",
      "+----+-----+\n",
      "|1880| 1058|\n",
      "|1881|  997|\n",
      "|1882| 1099|\n",
      "|1883| 1030|\n",
      "|1884| 1125|\n",
      "|1885| 1097|\n",
      "|1886| 1110|\n",
      "|1887| 1067|\n",
      "|1888| 1177|\n",
      "|1889| 1111|\n",
      "|1890| 1161|\n",
      "|1891| 1127|\n",
      "|1892| 1260|\n",
      "|1893| 1179|\n",
      "|1894| 1239|\n",
      "|1895| 1241|\n",
      "|1896| 1266|\n",
      "|1897| 1229|\n",
      "|1898| 1289|\n",
      "|1899| 1200|\n",
      "+----+-----+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query4.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 10 Nama Perempuan paling Popular pada tahun 2014"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "query5 = spark.sql(\"SELECT _c1 as Name FROM babynames WHERE _c2='2014' AND _C3 ='F' LIMIT 10\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------+\n",
      "|     Name|\n",
      "+---------+\n",
      "|     Emma|\n",
      "|   Olivia|\n",
      "|   Sophia|\n",
      "| Isabella|\n",
      "|      Ava|\n",
      "|      Mia|\n",
      "|    Emily|\n",
      "|  Abigail|\n",
      "|  Madison|\n",
      "|Charlotte|\n",
      "+---------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query5.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Top 10 Nama Laki-Laki pada tahun 2013"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "query6 = spark.sql(\"SELECT _c1 as Name FROM babynames WHERE _c2='2013' AND _C3 ='M' LIMIT 10\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------+\n",
      "|     Name|\n",
      "+---------+\n",
      "|     Noah|\n",
      "|     Liam|\n",
      "|    Jacob|\n",
      "|    Mason|\n",
      "|  William|\n",
      "|    Ethan|\n",
      "|  Michael|\n",
      "|Alexander|\n",
      "|   Jayden|\n",
      "|   Daniel|\n",
      "+---------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query6.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mencari nama anak Perempuang yang memiliki 5-10 characters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "query7 = spark.sql(\"SELECT _c2 as Year, SUM(_c4) as Jumlah FROM babynames WHERE _c3='F' AND LENGTH (_c1) BETWEEN 1 AND 5 GROUP BY _c2 ORDER BY SUM(_c4) ASC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----+--------+\n",
      "|Year|  Jumlah|\n",
      "+----+--------+\n",
      "|1880| 52837.0|\n",
      "|1881| 53509.0|\n",
      "|1882| 62575.0|\n",
      "|1883| 65028.0|\n",
      "|1884| 74876.0|\n",
      "|1885| 77351.0|\n",
      "|1886| 83469.0|\n",
      "|1887| 84315.0|\n",
      "|1889|102919.0|\n",
      "|1888|103219.0|\n",
      "|1891|107074.0|\n",
      "|1890|109786.0|\n",
      "|1893|122585.0|\n",
      "|1892|122631.0|\n",
      "|1894|127789.0|\n",
      "|1899|128922.0|\n",
      "|1901|131150.0|\n",
      "|1897|131992.0|\n",
      "|1895|132430.0|\n",
      "|1896|134715.0|\n",
      "+----+--------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query7.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mencari nama terpendek anak Laki-Laki setiap tahun. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "query8 = spark.sql(\"SELECT DISTINCT _c1 as Name, MIN(LENGTH(_c1)) FROM babynames WHERE _c3='M' GROUP BY _c1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------+----------------+\n",
      "|    Name|min(length(_c1))|\n",
      "+--------+----------------+\n",
      "|  Johnie|               6|\n",
      "|   Dmoni|               5|\n",
      "|Abdullah|               8|\n",
      "|  Hudsen|               6|\n",
      "|   Arkan|               5|\n",
      "| Stedman|               7|\n",
      "|   Pavlo|               5|\n",
      "|  Jeylan|               6|\n",
      "|  Rakwon|               6|\n",
      "|  Scyler|               6|\n",
      "|   Brady|               5|\n",
      "| Keandre|               7|\n",
      "|   Arlet|               5|\n",
      "|  Tyrone|               6|\n",
      "|   Kamry|               5|\n",
      "|   Kendy|               5|\n",
      "|   Nadar|               5|\n",
      "|  Spirit|               6|\n",
      "|  Dareld|               6|\n",
      "|  Esaiah|               6|\n",
      "+--------+----------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "query8.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
